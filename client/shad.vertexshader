layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;
out vec2 uv;
out vec3 vNormal;

mat4 rotate(float angle, vec3 axis)
{
    axis = normalize(axis);
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1.0 - c;

    return mat4(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  0.0,
                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  0.0,
                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c,           0.0,
                0.0,                                0.0,                                0.0,                                1.0);
}

void main()
{
  gl_Position =
    proj * view * mvp * rotate(-3.1415926 / 2, vec3(1, 0, 0)) * vec4(vertexPosition_modelspace, 1.0);
  uv = vertexUV;
  vNormal = (proj * view * mvp * rotate(3.1415926, vec3(1, 0, 0)) * vec4(vertexNormal, 0.0)).xyz;
}
